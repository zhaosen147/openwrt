// SPDX-License-Identifier: GPL-2.0-only
/dts-v1/;
/* Copyright (c) 2017, The Linux Foundation. All rights reserved.
 */
#include "ipq8074.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	#address-cells = <0x2>;
	#size-cells = <0x2>;
	model = "Xiaomi Mi AIoT Router AX3600";
	compatible = "xiaomi,ax3600", "qcom,ipq8074", "qcom,ipq807x";
	interrupt-parent = <&intc>;

	firmware {
		scm {
			compatible = "qcom,scm-ipq8074", "qcom,scm";
		};
	};

	aliases {
		serial0 = &blsp1_uart5;
		serial1 = &blsp1_uart3;
		led-boot = &led_system_yellow;
		led-failsafe = &led_system_yellow;
		led-running = &led_system_blue;
		led-upgrade = &led_system_yellow;
	};

	chosen {
		stdout-path = "serial0";
		bootargs-append = " swiotlb=1 root=/dev/ubiblock0_1";
	};

	tcsr_mutex: hwlock {
		compatible = "qcom,tcsr-mutex";
		syscon = <&tcsr_mutex_regs 0 0x80>;
		#hwlock-cells = <1>;
	};

	tcsr_mutex: hwlock {
		compatible = "qcom,tcsr-mutex";
		syscon = <&tcsr_mutex_regs 0 0x80>;
		#hwlock-cells = <1>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
#if 0
		nss@40000000 {
			no-map;
			reg = <0x0 0x40000000 0x0 0x01000000>;
		};

		uboot@4a600000 {
			no-map;
			reg = <0x0 0x4a600000 0x0 0x00400000>;
		};

		sbl@4aa00000 {
			no-map;
			reg = <0x0 0x4aa00000 0x0 0x00100000>;
		};

		tz@4ac00000 {   /* TZ */
			no-map;
			reg = <0x0 0x4ac00000 0x0 0x00400000>;
		};
#endif
		smem_region:smem@4ab00000 {
			no-map;
			reg = <0x0 0x4ab00000 0x0 0x00100000>;
		};

		q6_region: wcnss@4b000000 {
			no-map;
			reg = <0x0 0x4b000000 0x0 0x05f00000>;
		};
#if 0
		q6_etr_region:q6_etr_dump@4e700000 {
			no-map;
			reg = <0x0 0x4e700000 0x0 0x100000>;
		};

		wifi_dump@50500000 {
			no-map;
			reg = <0x0 0x50500000 0x0 0x200000>;
		};
#endif
	};
        
	smem {
		compatible = "qcom,smem";
		memory-region = <&smem_region>;
		hwlocks = <&tcsr_mutex 0>;
	};

	soc {
		pinctrl@1000000 {
			button_pins: button-pins {
				pins = "gpio34";
				function = "gpio";
				bias-pull-up;
				drive-strength = <8>;
			};
			led_pins: led_pins {
				pins = "gpio42", "gpio43", "gpio21",
				       "gpio22", "gpio51";
				function = "gpio";
				drive-strength = <8>;
				bias-pull-down;
			};
			mdio_pins: mdio_pinmux {
				mux_0 {
					pins = "gpio68";
					function = "mdc";
					drive-strength = <8>;
					bias-pull-up;
				};
				mux_1 {
					pins = "gpio69";
					function = "mdio";
					drive-strength = <8>;
					bias-pull-up;
				};
				mux_2 {
					pins = "gpio25";
					function = "gpio";
					bias-pull-up;
				};
				mux_3 {
					pins = "gpio44";
					function = "gpio";
					bias-pull-up;
				};
			};
			
			pcie_pins {
				pcie0_rst {
					pins = "gpio52";
					function = "pcie0_rst";
					drive-strength = <0x8>;
					bias-pull-down;
				};

				pcie0_wake {
					pins = "gpio59";
					function = "pcie0_wake";
					drive-strength = <0x8>;
					bias-pull-down;
				};
			};
		};


		serial@78b3000 {
			status = "ok";
		};

		serial@78b1000 {
			 status = "ok";
		};

		dma@7984000 {
			 status = "ok";
		};

		nand@79b0000 {
			status = "ok";

			nand@0 {
				reg = <0>;
				nand-ecc-strength = <4>;
				nand-ecc-step-size = <512>;
				nand-bus-width = <8>;
				
				partitions {
					compatible = "fixed-partitions";
					#address-cells = <1>;
					#size-cells = <1>;
					
					partition0@0 {
						label = "0:SBL1";
						reg = <0x0 0x100000>;
						read-only;
					};

					partition1@100000 {
						label = "0:MIBIB";
						reg = <0x100000 0x100000>;
						read-only;
					};

					partition2@200000 {
						label = "0:QSEE";
						reg = <0x200000 0x300000>;
						read-only;
					};

					partition3@500000 {
						label = "0:DEVCFG";
						reg = <0x500000 0x80000>;
						read-only;
					};


					partition4@580000 {
						label = "0:RPM";
						reg = <0x580000 0x80000>;
						read-only;
					};

					partition5@600000 {
						label = "0:CDT";
						reg = <0x600000 0x80000>;
						read-only;
					};


					partition6@680000 {
						label = "0:APPSBLENV";
						reg = <0x680000 0x80000>;
						read-only;
					};

					partition7@700000 {
						label = "0:APPSBL";
						reg = <0x700000 0x100000>;
						read-only;
					};

					art: partition8@800000 {
						label = "0:ART";
						reg = <0x800000 0x80000>;
						read-only;
					};

					partition9@880000 {
						label = "bdata";
						reg = <0x880000 0x80000>;
						read-only;
					};

					partition10@900000 {
						label = "crash";
						reg = <0x900000 0x80000>;
						read-only;
					};

					partition11@980000 {
						label = "crash_syslog";
						reg = <0x980000 0x80000>;
						read-only;
					};

					partition12@a00000 {
						label = "rootfs";
						reg = <0xa00000 0x23c0000>;
					};

					partition13@2dc0000 {
						label = "rootfs_1";
						reg = <0x2dc0000 0x8000000>;
					};


					partition14@adc0000 {
						label = "overlay";
						reg = <0xadc0000 0x1ec0000>;
					};

					partition15@cc80000 {
						label = "rsvd0";
						reg = <0xcc80000 0x80000>;
						read-only;
					};

					partition16@cd00000 {
						label = "0:WIFIFW";
						reg = <0xcd00000 0x900000>;
						read-only;
					};
				};
			};
		};

		phy@84000 {
			status = "ok";
		};

		pci@20000000 {
			status = "ok";
			perst-gpio = <&tlmm 52 0x1>;
		};

		mdio@90000 {
			pinctrl-0 = <&mdio_pins>;
			pinctrl-names = "default";
			phy-reset-gpio = <&tlmm 37 0>;
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "qcom,ipq40xx-mdio";
			reg = <0x90000 0x64>;

			phy0: ethernet-phy@0 {
				reg = <0>;
			};
			phy1: ethernet-phy@1 {
				reg = <1>;
			};
			phy2: ethernet-phy@2 {
				reg = <2>;
			};
			phy3: ethernet-phy@3 {
				reg = <3>;
			};
			phy4: ethernet-phy@4 {
				reg = <4>;
			};
		};

		ess-switch@3a000000 {
			compatible = "qcom,ess-switch-ipq807x";
			reg = <0x3a000000 0x1000000>;
			switch_access_mode = "local bus";
			switch_cpu_bmp = <0x1>;  /* cpu port bitmap */
			switch_lan_bmp = <0x1e>; /* lan port bitmap */
			switch_wan_bmp = <0x20>; /* wan port bitmap */
			switch_mac_mode = <0x0>; /* mac mode for uniphy instance0*/
			switch_mac_mode1 = <0xff>; /* mac mode for uniphy instance1*/
			switch_mac_mode2 = <0xff>; /* mac mode for uniphy instance2*/
			bm_tick_mode = <0>; /* bm tick mode */
			tm_tick_mode = <0>; /* tm tick mode */
			clocks = <&gcc GCC_CMN_12GPLL_AHB_CLK>,
					<&gcc GCC_CMN_12GPLL_SYS_CLK>,
					<&gcc GCC_UNIPHY0_AHB_CLK>,
					<&gcc GCC_UNIPHY0_SYS_CLK>,
					<&gcc GCC_UNIPHY1_AHB_CLK>,
					<&gcc GCC_UNIPHY1_SYS_CLK>,
					<&gcc GCC_UNIPHY2_AHB_CLK>,
					<&gcc GCC_UNIPHY2_SYS_CLK>,
					<&gcc GCC_PORT1_MAC_CLK>,
					<&gcc GCC_PORT2_MAC_CLK>,
					<&gcc GCC_PORT3_MAC_CLK>,
					<&gcc GCC_PORT4_MAC_CLK>,
					<&gcc GCC_PORT5_MAC_CLK>,
					<&gcc GCC_PORT6_MAC_CLK>,
					<&gcc GCC_NSS_PPE_CLK>,
					<&gcc GCC_NSS_PPE_CFG_CLK>,
					<&gcc GCC_NSSNOC_PPE_CLK>,
					<&gcc GCC_NSSNOC_PPE_CFG_CLK>,
					<&gcc GCC_NSS_EDMA_CLK>,
					<&gcc GCC_NSS_EDMA_CFG_CLK>,
					<&gcc GCC_NSS_PPE_IPE_CLK>,
					<&gcc GCC_NSS_PPE_BTQ_CLK>,
					<&gcc GCC_MDIO_AHB_CLK>,
					<&gcc GCC_NSS_NOC_CLK>,
					<&gcc GCC_NSSNOC_SNOC_CLK>,
					<&gcc GCC_MEM_NOC_NSS_AXI_CLK>,
					<&gcc GCC_NSS_CRYPTO_CLK>,
					<&gcc GCC_NSS_IMEM_CLK>,
					<&gcc GCC_NSS_PTP_REF_CLK>,
					<&gcc GCC_NSS_PORT1_RX_CLK>,
					<&gcc GCC_NSS_PORT1_TX_CLK>,
					<&gcc GCC_NSS_PORT2_RX_CLK>,
					<&gcc GCC_NSS_PORT2_TX_CLK>,
					<&gcc GCC_NSS_PORT3_RX_CLK>,
					<&gcc GCC_NSS_PORT3_TX_CLK>,
					<&gcc GCC_NSS_PORT4_RX_CLK>,
					<&gcc GCC_NSS_PORT4_TX_CLK>,
					<&gcc GCC_NSS_PORT5_RX_CLK>,
					<&gcc GCC_NSS_PORT5_TX_CLK>,
					<&gcc GCC_NSS_PORT6_RX_CLK>,
					<&gcc GCC_NSS_PORT6_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT1_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT1_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT2_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT2_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT3_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT3_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT4_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT4_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT5_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT5_TX_CLK>,
					<&gcc GCC_UNIPHY1_PORT5_RX_CLK>,
					<&gcc GCC_UNIPHY1_PORT5_TX_CLK>,
					<&gcc GCC_UNIPHY2_PORT6_RX_CLK>,
					<&gcc GCC_UNIPHY2_PORT6_TX_CLK>,
					<&gcc NSS_PORT5_RX_CLK_SRC>,
					<&gcc NSS_PORT5_TX_CLK_SRC>;
			clock-names = "cmn_ahb_clk", "cmn_sys_clk",
					"uniphy0_ahb_clk", "uniphy0_sys_clk",
					"uniphy1_ahb_clk", "uniphy1_sys_clk",
					"uniphy2_ahb_clk", "uniphy2_sys_clk",
					"port1_mac_clk", "port2_mac_clk",
					"port3_mac_clk", "port4_mac_clk",
					"port5_mac_clk", "port6_mac_clk",
					"nss_ppe_clk", "nss_ppe_cfg_clk",
					"nssnoc_ppe_clk", "nssnoc_ppe_cfg_clk",
					"nss_edma_clk", "nss_edma_cfg_clk",
					"nss_ppe_ipe_clk", "nss_ppe_btq_clk",
					"gcc_mdio_ahb_clk", "gcc_nss_noc_clk",
					"gcc_nssnoc_snoc_clk",
					"gcc_mem_noc_nss_axi_clk",
					"gcc_nss_crypto_clk",
					"gcc_nss_imem_clk",
					"gcc_nss_ptp_ref_clk",
					"nss_port1_rx_clk", "nss_port1_tx_clk",
					"nss_port2_rx_clk", "nss_port2_tx_clk",
					"nss_port3_rx_clk", "nss_port3_tx_clk",
					"nss_port4_rx_clk", "nss_port4_tx_clk",
					"nss_port5_rx_clk", "nss_port5_tx_clk",
					"nss_port6_rx_clk", "nss_port6_tx_clk",
					"uniphy0_port1_rx_clk",
					"uniphy0_port1_tx_clk",
					"uniphy0_port2_rx_clk",
					"uniphy0_port2_tx_clk",
					"uniphy0_port3_rx_clk",
					"uniphy0_port3_tx_clk",
					"uniphy0_port4_rx_clk",
					"uniphy0_port4_tx_clk",
					"uniphy0_port5_rx_clk",
					"uniphy0_port5_tx_clk",
					"uniphy1_port5_rx_clk",
					"uniphy1_port5_tx_clk",
					"uniphy2_port6_rx_clk",
					"uniphy2_port6_tx_clk",
					"nss_port5_rx_clk_src",
					"nss_port5_tx_clk_src";

			resets = <&gcc GCC_PPE_FULL_RESET>,
				 <&gcc GCC_UNIPHY0_SOFT_RESET>,
				 <&gcc GCC_UNIPHY0_XPCS_RESET>,
				 <&gcc GCC_UNIPHY1_SOFT_RESET>,
				 <&gcc GCC_UNIPHY1_XPCS_RESET>,
				 <&gcc GCC_UNIPHY2_SOFT_RESET>,
				 <&gcc GCC_UNIPHY2_XPCS_RESET>,
				 <&gcc GCC_NSSPORT1_RESET>,
				 <&gcc GCC_NSSPORT2_RESET>,
				 <&gcc GCC_NSSPORT3_RESET>,
				 <&gcc GCC_NSSPORT4_RESET>,
				 <&gcc GCC_NSSPORT5_RESET>,
				 <&gcc GCC_NSSPORT6_RESET>;

			reset-names = "ppe_rst", "uniphy0_soft_rst",
					"uniphy0_xpcs_rst", "uniphy1_soft_rst",
					"uniphy1_xpcs_rst", "uniphy2_soft_rst",
					"uniphy2_xpcs_rst", "nss_port1_rst",
					"nss_port2_rst", "nss_port3_rst",
					"nss_port4_rst", "nss_port5_rst",
					"nss_port6_rst";

			qcom,port_phyinfo {
				port@0 {
					port_id = <1>;
					phy_address = <0>;
				};
				port@1 {
					port_id = <2>;
					phy_address = <1>;
				};
				port@2 {
					port_id = <3>;
					phy_address = <2>;
				};
				port@3 {
					port_id = <4>;
					phy_address = <3>;
				};
				port@4 {
					port_id = <5>;
					phy_address = <4>;
				};
			};

			port_scheduler_resource {
				port@0 {
					port_id = <0>;
					ucast_queue = <0 143>;
					mcast_queue = <256 271>;
					l0sp = <0 35>;
					l0cdrr = <0 47>;
					l0edrr = <0 47>;
					l1cdrr = <0 7>;
					l1edrr = <0 7>;
				};
				port@1 {
					port_id = <1>;
					ucast_queue = <144 159>;
					mcast_queue = <272 275>;
					l0sp = <36 39>;
					l0cdrr = <48 63>;
					l0edrr = <48 63>;
					l1cdrr = <8 11>;
					l1edrr = <8 11>;
				};
				port@2 {
					port_id = <2>;
					ucast_queue = <160 175>;
					mcast_queue = <276 279>;
					l0sp = <40 43>;
					l0cdrr = <64 79>;
					l0edrr = <64 79>;
					l1cdrr = <12 15>;
					l1edrr = <12 15>;
				};
				port@3 {
					port_id = <3>;
					ucast_queue = <176 191>;
					mcast_queue = <280 283>;
					l0sp = <44 47>;
					l0cdrr = <80 95>;
					l0edrr = <80 95>;
					l1cdrr = <16 19>;
					l1edrr = <16 19>;
				};
				port@4 {
					port_id = <4>;
					ucast_queue = <192 207>;
					mcast_queue = <284 287>;
					l0sp = <48 51>;
					l0cdrr = <96 111>;
					l0edrr = <96 111>;
					l1cdrr = <20 23>;
					l1edrr = <20 23>;
				};
				port@5 {
					port_id = <5>;
					ucast_queue = <208 223>;
					mcast_queue = <288 291>;
					l0sp = <52 55>;
					l0cdrr = <112 127>;
					l0edrr = <112 127>;
					l1cdrr = <24 27>;
					l1edrr = <24 27>;
				};
				port@6 {
					port_id = <6>;
					ucast_queue = <224 239>;
					mcast_queue = <292 295>;
					l0sp = <56 59>;
					l0cdrr = <128 143>;
					l0edrr = <128 143>;
					l1cdrr = <28 31>;
					l1edrr = <28 31>;
				};
				port@7 {
					port_id = <7>;
					ucast_queue = <240 255>;
					mcast_queue = <296 299>;
					l0sp = <60 63>;
					l0cdrr = <144 159>;
					l0edrr = <144 159>;
					l1cdrr = <32 35>;
					l1edrr = <32 35>;
				};
			};

			port_scheduler_config {
				port@0 {
					port_id = <0>;
					l1scheduler {
						group@0 {
							sp = <0 1>; /*L0 SPs*/
							/*cpri cdrr epri edrr*/
							cfg = <0 0 0 0>;
						};
					};
					l0scheduler {
						group@0 {
							/*unicast queues*/
							ucast_queue = <0 4 8>;
							/*multicast queues*/
							mcast_queue = <256 260>;
							/*sp cpri cdrr epri edrr*/
							cfg = <0 0 0 0 0>;
						};
						group@1 {
							ucast_queue = <1 5 9>;
							mcast_queue = <257 261>;
							cfg = <0 1 1 1 1>;
						};
						group@2 {
							ucast_queue = <2 6 10>;
							mcast_queue = <258 262>;
							cfg = <0 2 2 2 2>;
						};
						group@3 {
							ucast_queue = <3 7 11>;
							mcast_queue = <259 263>;
							cfg = <0 3 3 3 3>;
						};
					};
				};
				port@1 {
					port_id = <1>;
					l1scheduler {
						group@0 {
							sp = <36>;
							cfg = <0 8 0 8>;
						};
						group@1 {
							sp = <37>;
							cfg = <1 9 1 9>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <144>;
							ucast_loop_pri = <16>;
							mcast_queue = <272>;
							mcast_loop_pri = <4>;
							cfg = <36 0 48 0 48>;
						};
					};
				};
				port@2 {
					port_id = <2>;
					l1scheduler {
						group@0 {
							sp = <40>;
							cfg = <0 12 0 12>;
						};
						group@1 {
							sp = <41>;
							cfg = <1 13 1 13>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <160>;
							ucast_loop_pri = <16>;
							mcast_queue = <276>;
							mcast_loop_pri = <4>;
							cfg = <40 0 64 0 64>;
						};
					};
				};
				port@3 {
					port_id = <3>;
					l1scheduler {
						group@0 {
							sp = <44>;
							cfg = <0 16 0 16>;
						};
						group@1 {
							sp = <45>;
							cfg = <1 17 1 17>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <176>;
							ucast_loop_pri = <16>;
							mcast_queue = <280>;
							mcast_loop_pri = <4>;
							cfg = <44 0 80 0 80>;
						};
					};
				};
				port@4 {
					port_id = <4>;
					l1scheduler {
						group@0 {
							sp = <48>;
							cfg = <0 20 0 20>;
						};
						group@1 {
							sp = <49>;
							cfg = <1 21 1 21>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <192>;
							ucast_loop_pri = <16>;
							mcast_queue = <284>;
							mcast_loop_pri = <4>;
							cfg = <48 0 96 0 96>;
						};
					};
				};
				port@5 {
					port_id = <5>;
					l1scheduler {
						group@0 {
							sp = <52>;
							cfg = <0 24 0 24>;
						};
						group@1 {
							sp = <53>;
							cfg = <1 25 1 25>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <208>;
							ucast_loop_pri = <16>;
							mcast_queue = <288>;
							mcast_loop_pri = <4>;
							cfg = <52 0 112 0 112>;
						};
					};
				};
				port@6 {
					port_id = <6>;
					l1scheduler {
						group@0 {
							sp = <56>;
							cfg = <0 28 0 28>;
						};
						group@1 {
							sp = <57>;
							cfg = <1 29 1 29>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <224>;
							ucast_loop_pri = <16>;
							mcast_queue = <292>;
							mcast_loop_pri = <4>;
							cfg = <56 0 128 0 128>;
						};
					};
				};
				port@7 {
					port_id = <7>;
					l1scheduler {
						group@0 {
							sp = <60>;
							cfg = <0 32 0 32>;
						};
					};
					l0scheduler {
						group@0 {
							ucast_queue = <240>;
							mcast_queue = <296>;
							cfg = <60 0 144 0 144>;
						};
					};
				};
			};
		};

		ess-uniphy@7a00000 {
			compatible = "qcom,ess-uniphy";
			reg = <0x7a00000 0x30000>;
			uniphy_access_mode = "local bus";
		};

		edma@3ab00000 {
			compatible = "qcom,edma";
			reg = <0x3ab00000 0x76900>;
			reg-names = "edma-reg-base";
			qcom,txdesc-ring-start = <23>;
			qcom,txdesc-rings = <1>;
			qcom,txcmpl-ring-start = <7>;
			qcom,txcmpl-rings = <1>;
			qcom,rxfill-ring-start = <7>;
			qcom,rxfill-rings = <1>;
			qcom,rxdesc-ring-start = <15>;
			qcom,rxdesc-rings = <1>;
			interrupts = <0 345 4>,
					<0 353 4>,
					<0 361 4>,
					<0 344 4>;
			resets = <&gcc GCC_EDMA_HW_RESET>;
			reset-names = "edma_rst";
			clocks = <&gcc GCC_CMN_12GPLL_AHB_CLK>,
					<&gcc GCC_CMN_12GPLL_SYS_CLK>,
					<&gcc GCC_UNIPHY0_AHB_CLK>,
					<&gcc GCC_UNIPHY0_SYS_CLK>,
					<&gcc GCC_UNIPHY1_AHB_CLK>,
					<&gcc GCC_UNIPHY1_SYS_CLK>,
					<&gcc GCC_UNIPHY2_AHB_CLK>,
					<&gcc GCC_UNIPHY2_SYS_CLK>,
					<&gcc GCC_PORT1_MAC_CLK>,
					<&gcc GCC_PORT2_MAC_CLK>,
					<&gcc GCC_PORT3_MAC_CLK>,
					<&gcc GCC_PORT4_MAC_CLK>,
					<&gcc GCC_PORT5_MAC_CLK>,
					<&gcc GCC_PORT6_MAC_CLK>,
					<&gcc GCC_NSS_PPE_CLK>,
					<&gcc GCC_NSS_PPE_CFG_CLK>,
					<&gcc GCC_NSSNOC_PPE_CLK>,
					<&gcc GCC_NSSNOC_PPE_CFG_CLK>,
					<&gcc GCC_NSS_EDMA_CLK>,
					<&gcc GCC_NSS_EDMA_CFG_CLK>,
					<&gcc GCC_NSS_PPE_IPE_CLK>,
					<&gcc GCC_NSS_PPE_BTQ_CLK>,
					<&gcc GCC_MDIO_AHB_CLK>,
					<&gcc GCC_NSS_NOC_CLK>,
					<&gcc GCC_NSSNOC_SNOC_CLK>,
					<&gcc GCC_MEM_NOC_NSS_AXI_CLK>,
					<&gcc GCC_NSS_CRYPTO_CLK>,
					<&gcc GCC_NSS_IMEM_CLK>,
					<&gcc GCC_NSS_PTP_REF_CLK>,
					<&gcc GCC_NSS_PORT1_RX_CLK>,
					<&gcc GCC_NSS_PORT1_TX_CLK>,
					<&gcc GCC_NSS_PORT2_RX_CLK>,
					<&gcc GCC_NSS_PORT2_TX_CLK>,
					<&gcc GCC_NSS_PORT3_RX_CLK>,
					<&gcc GCC_NSS_PORT3_TX_CLK>,
					<&gcc GCC_NSS_PORT4_RX_CLK>,
					<&gcc GCC_NSS_PORT4_TX_CLK>,
					<&gcc GCC_NSS_PORT5_RX_CLK>,
					<&gcc GCC_NSS_PORT5_TX_CLK>,
					<&gcc GCC_NSS_PORT6_RX_CLK>,
					<&gcc GCC_NSS_PORT6_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT1_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT1_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT2_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT2_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT3_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT3_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT4_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT4_TX_CLK>,
					<&gcc GCC_UNIPHY0_PORT5_RX_CLK>,
					<&gcc GCC_UNIPHY0_PORT5_TX_CLK>,
					<&gcc GCC_UNIPHY1_PORT5_RX_CLK>,
					<&gcc GCC_UNIPHY1_PORT5_TX_CLK>,
					<&gcc GCC_UNIPHY2_PORT6_RX_CLK>,
					<&gcc GCC_UNIPHY2_PORT6_TX_CLK>,
					<&gcc NSS_PORT5_RX_CLK_SRC>,
					<&gcc NSS_PORT5_TX_CLK_SRC>;
			clock-names = "cmn_ahb_clk", "cmn_sys_clk",
					"uniphy0_ahb_clk", "uniphy0_sys_clk",
					"uniphy1_ahb_clk", "uniphy1_sys_clk",
					"uniphy2_ahb_clk", "uniphy2_sys_clk",
					"port1_mac_clk", "port2_mac_clk",
					"port3_mac_clk", "port4_mac_clk",
					"port5_mac_clk", "port6_mac_clk",
					"nss_ppe_clk", "nss_ppe_cfg_clk",
					"nssnoc_ppe_clk", "nssnoc_ppe_cfg_clk",
					"nss_edma_clk", "nss_edma_cfg_clk",
					"nss_ppe_ipe_clk", "nss_ppe_btq_clk",
					"gcc_mdio_ahb_clk", "gcc_nss_noc_clk",
					"gcc_nssnoc_snoc_clk",
					"gcc_mem_noc_nss_axi_clk",
					"gcc_nss_crypto_clk",
					"gcc_nss_imem_clk",
					"gcc_nss_ptp_ref_clk",
					"nss_port1_rx_clk", "nss_port1_tx_clk",
					"nss_port2_rx_clk", "nss_port2_tx_clk",
					"nss_port3_rx_clk", "nss_port3_tx_clk",
					"nss_port4_rx_clk", "nss_port4_tx_clk",
					"nss_port5_rx_clk", "nss_port5_tx_clk",
					"nss_port6_rx_clk", "nss_port6_tx_clk",
					"uniphy0_port1_rx_clk",
					"uniphy0_port1_tx_clk",
					"uniphy0_port2_rx_clk",
					"uniphy0_port2_tx_clk",
					"uniphy0_port3_rx_clk",
					"uniphy0_port3_tx_clk",
					"uniphy0_port4_rx_clk",
					"uniphy0_port4_tx_clk",
					"uniphy0_port5_rx_clk",
					"uniphy0_port5_tx_clk",
					"uniphy1_port5_rx_clk",
					"uniphy1_port5_tx_clk",
					"uniphy2_port6_rx_clk",
					"uniphy2_port6_tx_clk",
					"nss_port5_rx_clk_src",
					"nss_port5_tx_clk_src";
		};

		dp1 {
			device_type = "network";
			compatible = "qcom,nss-dp";
			qcom,id = <1>;
			reg = <0x3a001000 0x200>;
			qcom,mactype = <0>;
			qcom,phy-mdio-addr = <0>;
			phy-mode = "sgmii";
			status = "disabled";
		};

		dp2 {
			device_type = "network";
			compatible = "qcom,nss-dp";
			qcom,id = <2>;
			reg = <0x3a001200 0x200>;
			qcom,mactype = <0>;
			mtd-mac-address = <&art 0x6>;
			mtd-mac-address-increment = <1>;
			qcom,link-poll = <1>;
			qcom,phy-mdio-addr = <1>;
			phy-mode = "sgmii";
		};

		dp3 {
			device_type = "network";
			compatible = "qcom,nss-dp";
			qcom,id = <3>;
			reg = <0x3a001400 0x200>;
			qcom,mactype = <0>;
			mtd-mac-address = <&art 0x6>;
			qcom,link-poll = <1>;
			qcom,phy-mdio-addr = <2>;
			phy-mode = "sgmii";
		};

		dp4 {
			device_type = "network";
			compatible = "qcom,nss-dp";
			qcom,id = <4>;
			reg = <0x3a001600 0x200>;
			qcom,mactype = <0>;
			mtd-mac-address = <&art 0x6>;
			qcom,link-poll = <1>;
			qcom,phy-mdio-addr = <3>;
			phy-mode = "sgmii";
		};

		dp5 {
			device_type = "network";
			compatible = "qcom,nss-dp";
			qcom,id = <5>;
			reg = <0x3a001800 0x200>;
			qcom,mactype = <0>;
			mtd-mac-address = <&art 0x6>;
			qcom,link-poll = <1>;
			qcom,phy-mdio-addr = <4>;
			phy-mode = "sgmii";
		};

		q6v5_wcss: q6v5_wcss@CD00000 {
                        compatible = "qcom,ipq8074-wcss-pil";
                        reg = <0xCD00000 0x4040>,
                                <0x4ab000 0x20>;
                        reg-names = "qdsp6",
                                "rmb";
                        qca,auto-restart;
                        qca,extended-intc;
                        interrupts-extended = <&intc 0 325 1>,
                                        <&wcss_smp2p_in 0 0>,
                                        <&wcss_smp2p_in 1 0>,
                                        <&wcss_smp2p_in 2 0>,
                                        <&wcss_smp2p_in 3 0>;
                        interrupt-names = "wdog",
                                        "fatal",
                                        "ready",
                                        "handover",
                                        "stop-ack";

                        resets = <&gcc GCC_WCSSAON_RESET>,
                                <&gcc GCC_WCSS_BCR>,
                                <&gcc GCC_WCSS_Q6_BCR>;

                        reset-names = "wcss_aon_reset",
                                "wcss_reset",
                                "wcss_q6_reset";

			clocks = <&gcc GCC_PRNG_AHB_CLK>;
			clock-names = "prng";

                        qcom,halt-regs = <&tcsr_q6_block 0xA000 0xD000 0x0>;

                        qcom,smem-states = <&wcss_smp2p_out 0>,
                                        <&wcss_smp2p_out 1>;
                        qcom,smem-state-names = "shutdown",
                                                "stop";

                        memory-region = <&q6_region>;

			glink-edge {
				interrupts = <GIC_SPI 321 IRQ_TYPE_EDGE_RISING>;
				qcom,remote-pid = <1>;
				mboxes = <&apcs_glb 8>;

				qrtr_requests {
					qcom,glink-channels = "IPCRTR";
				};
			};
		};

		qcom_rng: qrng@e1000 {
			compatible = "qcom,prng-ipq807x";
			reg = <0xe3000 0x1000>;
			clocks = <&gcc GCC_PRNG_AHB_CLK>;
			clock-names = "core";
			status = "ok";
		};

		apcs: syscon@b111000 {
			compatible = "syscon";
			reg = <0x0B111000 0x1000>;
		};

		tcsr_q6_block: syscon@1945000 {
			compatible = "syscon";
			reg = <0x1945000 0xE000>;
		};

		tcsr_q6: syscon@1945000 {
			compatible = "syscon";
			reg = <0x01945000 0xe000>;
		};

		tcsr_mutex_regs: syscon@193d000 {
			compatible = "syscon";
			reg = <0x01905000 0x8000>;
		};

		apcs_glb: mailbox@b111000 {
			compatible = "qcom,ipq8074-apcs-apps-global";
			reg = <0x0b111000 0x1000>;

			#mbox-cells = <1>;
		};

		wifi0: wifi@c000000 {
			compatible = "qcom,ipq8074-wifi";
			reg = <0xc000000 0x2000000>;
			interrupts = <0 320 1>,
                     <0 319 1>,
                     <0 318 1>,
                     <0 317 1>,
                     <0 316 1>,
                     <0 315 1>,
                     <0 314 1>,
                     <0 311 1>,
                     <0 310 1>,
                     <0 411 1>,
                     <0 410 1>,
                     <0 40 1>,
                     <0 39 1>,
                     <0 302 1>,
                     <0 301 1>,
                     <0 37 1>,
                     <0 36 1>,
                     <0 296 1>,
                     <0 295 1>,
                     <0 294 1>,
                     <0 293 1>,
                     <0 292 1>,
                     <0 291 1>,
                     <0 290 1>,
                     <0 289 1>,
                     <0 288 1>,
                     <0 239 1>,
                     <0 236 1>,
                     <0 235 1>,
                     <0 234 1>,
                     <0 233 1>,
                     <0 232 1>,
                     <0 231 1>,
                     <0 230 1>,
                     <0 229 1>,
                     <0 228 1>,
                     <0 224 1>,
                     <0 223 1>,
                     <0 203 1>,
                     <0 183 1>,
                     <0 180 1>,
                     <0 179 1>,
                     <0 178 1>,
                     <0 177 1>,
                     <0 176 1>,
                     <0 163 1>,
                     <0 162 1>,
                     <0 160 1>,
                     <0 159 1>,
                     <0 158 1>,
                     <0 157 1>,
                     <0 156 1>;
			interrupt-names = "misc-pulse1",
                          "misc-latch",
                          "sw-exception",
                          "watchdog",
                          "ce0",
                          "ce1",
                          "ce2",
                          "ce3",
                          "ce4",
                          "ce5",
                          "ce6",
                          "ce7",
                          "ce8",
                          "ce9",
                          "ce10",
                          "ce11",
                          "host2wbm-desc-feed",
                          "host2reo-re-injection",
                          "host2reo-command",
                          "host2rxdma-monitor-ring3",
                          "host2rxdma-monitor-ring2",
                          "host2rxdma-monitor-ring1",
                          "reo2ost-exception",
                          "wbm2host-rx-release",
                          "reo2host-status",
                          "reo2host-destination-ring4",
                          "reo2host-destination-ring3",
                          "reo2host-destination-ring2",
                          "reo2host-destination-ring1",
                          "rxdma2host-monitor-destination-mac3",
                          "rxdma2host-monitor-destination-mac2",
                          "rxdma2host-monitor-destination-mac1",
                          "ppdu-end-interrupts-mac3",
                          "ppdu-end-interrupts-mac2",
                          "ppdu-end-interrupts-mac1",
                          "rxdma2host-monitor-status-ring-mac3",
                          "rxdma2host-monitor-status-ring-mac2",
                          "rxdma2host-monitor-status-ring-mac1",
                          "host2rxdma-host-buf-ring-mac3",
                          "host2rxdma-host-buf-ring-mac2",
                          "host2rxdma-host-buf-ring-mac1",
                          "rxdma2host-destination-ring-mac3",
                          "rxdma2host-destination-ring-mac2",
                          "rxdma2host-destination-ring-mac1",
                          "host2tcl-input-ring4",
                          "host2tcl-input-ring3",
                          "host2tcl-input-ring2",
                          "host2tcl-input-ring1",
                          "wbm2host-tx-completions-ring3",
                          "wbm2host-tx-completions-ring2",
                          "wbm2host-tx-completions-ring1",
                          "tcl2host-status-ring";
			clocks = <&gcc GCC_NSSNOC_CRYPTO_CLK>, <&gcc UBI32_PLL_MAIN>, <&gcc NSS_UBI1_CLK_SRC>,
					<&gcc GCC_UBI1_CORE_CLK>,
					<&gcc GCC_UBI0_CORE_CLK>,

					<&gcc GCC_UBI1_MPT_CLK>,
					<&gcc GCC_UBI0_MPT_CLK>,

					<&gcc GCC_UBI1_AHB_CLK>,
					<&gcc GCC_UBI0_AHB_CLK>,
					<&gcc GCC_NSSNOC_UBI1_AHB_CLK>,
					<&gcc GCC_NSSNOC_UBI0_AHB_CLK>,
					<&gcc GCC_NSSNOC_CE_AXI_CLK>,
					<&gcc GCC_NSSNOC_CE_APB_CLK>,
					<&gcc GCC_NSS_CSR_CLK>,
					<&gcc GCC_NSS_CE_AXI_CLK>,
					<&gcc GCC_NSS_CE_APB_CLK>,

					<&gcc GCC_UBI1_NC_AXI_CLK>,
					<&gcc GCC_UBI0_NC_AXI_CLK>,
					<&gcc GCC_UBI1_AXI_CLK>,
					<&gcc GCC_UBI0_AXI_CLK>,
					<&gcc GCC_NSS_NOC_CLK>,

					<&gcc GCC_NSSNOC_QOSGEN_REF_CLK>,
					<&gcc GCC_NSSNOC_TIMEOUT_REF_CLK>,

					<&gcc GCC_SNOC_BUS_TIMEOUT2_AHB_CLK>,

					<&gcc GCC_PCIE0_RCHNG_CLK>,

					<&gcc GCC_PCIE0_AXI_S_BRIDGE_CLK>,
					<&gcc GCC_SYS_NOC_PCIE0_AXI_CLK>,
					<&gcc GCC_PCIE0_AXI_S_CLK>,
					<&gcc GCC_PCIE0_AXI_M_CLK>,

					<&gcc GCC_PCIE1_PIPE_CLK>,
					<&gcc GCC_USB0_PIPE_CLK>,
					<&gcc GCC_USB1_PIPE_CLK>;

			clock-names = "gcc_nssnoc_crypto_clk", "ubi32_pll_main", "nss_ubi1_clk_src",
						"gcc_ubi1_core_clk",
						"gcc_ubi0_core_clk",

						"gcc_ubi1_mpt_clk",
						"gcc_ubi0_mpt_clk",

						"gcc_ubi1_ahb_clk",
						"gcc_ubi0_ahb_clk",
						"gcc_nssnoc_ubi1_ahb_clk",
						"gcc_nssnoc_ubi0_ahb_clk",
						"gcc_nssnoc_ce_axi_clk",
						"gcc_nssnoc_ce_apb_clk",
						"gcc_nss_csr_clk",
						"gcc_nss_ce_axi_clk",
						"gcc_nss_ce_apb_clk",

						"gcc_ubi1_nc_axi_clk",
						"gcc_ubi0_nc_axi_clk",
						"gcc_ubi1_axi_clk",
						"gcc_ubi0_axi_clk",
						"gcc_nss_noc_clk",


						"gcc_nssnoc_qosgen_ref_clk",
						"gcc_nssnoc_timeout_ref_clk",

						"gcc_snoc_bus_timeout2_ahb_clk",

						"gcc_pcie0_rchng_clk",

						"gcc_pcie0_axi_s_bridge_clk",
						"gcc_sys_noc_pcie0_axi_clk",
						"gcc_pcie0_axi_s_clk",
						"gcc_pcie0_axi_m_clk",

						"gcc_pcie1_pipe_clk",

						"gcc_usb0_pipe_clk",
						"gcc_usb1_pipe_clk";

			qcom,rproc = <&q6v5_wcss>;
		};

	};

	wcss: smp2p-wcss {
		compatible = "qcom,smp2p";
		qcom,smem = <435>, <428>;

		interrupt-parent = <&intc>;
		interrupts = <GIC_SPI 322 IRQ_TYPE_EDGE_RISING>;

		mboxes = <&apcs_glb 9>;

		qcom,local-pid = <0>;
		qcom,remote-pid = <1>;

		wcss_smp2p_out: master-kernel {
			qcom,entry-name = "master-kernel";
			#qcom,smem-state-cells = <1>;
		};

		wcss_smp2p_in: slave-kernel {
			qcom,entry-name = "slave-kernel";
			interrupt-controller;
			#interrupt-cells = <2>;
		};
	};

	keys {
		compatible = "gpio-keys";
		pinctrl-0 = <&button_pins>;
		pinctrl-names = "default";

		reset {
			label = "reset";
			gpios = <&tlmm 34 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-0 = <&led_pins>;
		pinctrl-names = "default";

		led_system_blue: system-blue {
			label = "ax3600:blue:system";
			gpios = <&tlmm 42 GPIO_ACTIVE_HIGH>;
		};

		led_system_yellow: system-yellow {
			label = "ax3600:yellow:system";
			gpios = <&tlmm 43 GPIO_ACTIVE_HIGH>;
		};

		network-yellow {
			label = "ax3600:yellow:network";
			gpios = <&tlmm 22 GPIO_ACTIVE_HIGH>;
		};

		network-blue {
			label = "ax3600:blue:network";
			gpios = <&tlmm 21 GPIO_ACTIVE_HIGH>;
		};

		aiot {
			label = "ax3600:blue:aiot";
			gpios = <&tlmm 51 GPIO_ACTIVE_HIGH>;
		};
	};
};
